basePath: /api/v1
definitions:
  log.Log:
    properties:
      command:
        example: Signin User
        type: string
      id:
        example: 1
        type: integer
      ip:
        example: 127.0.0.1:50336
        type: string
      time:
        example: "2022-10-27 10:18:47.791249"
        type: string
    type: object
  user.User:
    properties:
      id:
        example: 1
        type: integer
      password:
        example: pwd
        type: string
      username:
        example: user
        type: string
    type: object
  userapi.User:
    properties:
      password:
        example: pwd
        type: string
      username:
        example: user
        type: string
    type: object
host: localhost:19090
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /logs:
    get:
      description: get all logs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/log.Log'
            type: array
        "400":
          description: Bad Request
        "403":
          description: Forbidden
      security:
      - JWT: []
      summary: List logs
      tags:
      - logs
  /signin:
    post:
      consumes:
      - application/json
      description: Signin an user passing username and password in json
      parameters:
      - description: Signin user
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/userapi.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - JWT: []
      summary: Signin an user
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      description: Signup an user passing username and password in json
      parameters:
      - description: Add user
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/userapi.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - JWT: []
      summary: Signup an user
      tags:
      - users
  /user:
    delete:
      description: Delete user passing username
      parameters:
      - description: user to search by username
        format: string
        in: query
        name: username
        type: string
      responses:
        "200":
          description: DELETED
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - JWT: []
      summary: Delete an user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an user passing username and password in json
      parameters:
      - description: Update user
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/userapi.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - JWT: []
      summary: Update an user
      tags:
      - users
  /users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      security:
      - JWT: []
      summary: Get all users
      tags:
      - users
securityDefinitions:
  JWT:
    in: header
    name: JWT
    type: apiKey
swagger: "2.0"
